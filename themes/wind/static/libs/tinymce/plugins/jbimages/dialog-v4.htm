<!DOCTYPE html>
<html lang="zh_CN">
<head>
	<meta charset="utf-8">
	<meta content="xxxx" name="_xsrf" />
	<title>上传图片</title>
	<script type="text/javascript" src="js/dialog-v4.js"></script>
	<link href="css/dialog-v4.css" rel="stylesheet" type="text/css">
	<style>
*{margin:0;padding:0;}
a{text-decoration:none;}
.btn_addPic{
    display: block;
    position: relative;
    width: 100%;
	height: 128px;
	overflow: hidden;
	border: 1px solid #EBEBEB;
	background: none repeat scroll 0 0 #F3F3F3;
	color: #999999;
    cursor: pointer;
	text-align: center;
}
.btn_addPic span{display: block;line-height: 128px;font-size: 12px;}
.btn_addPic em {
	background:url("img/ico.png") 0 0;
	display: inline-block;
	width: 18px;
	height: 18px;
	line-height: 128px;
	overflow: hidden;
	margin: 10px 5px 10px 0;
	vertical-align: middle;
	text-align: center;
}
.btn_addPic:hover em{background-position:-19px 0;}
.filePrew {
    display: block;
	position: absolute;
	text-align: center;
    top: 0;
	left: 0;
    width: 100%;
	height: 128px;
	font-size: 100px; /* 增大不同浏览器的可点击区域 */
    opacity: 0; /* 实现的关键点 */
	filter:alpha(opacity=0);/* 兼容IE */
}
</style>
</head>
<body>
	<form class="form-inline" id="upl" name="upl" action="/api/upload/" method="post" enctype="multipart/form-data" target="upload_target" onsubmit="jbImagesDialog.inProgress();">
		<div id="upload_in_progress" class="upload_infobar">
			<img src="img/spinner.gif" width="16" height="16" class="spinner" style="text-align: center;line-height: 128px;">
			正在上传&hellip;
			<div id="upload_additional_info"></div>
		</div>
		<div id="upload_infobar" class="upload_infobar"></div>
		<p id="upload_form_container">
			<a class="btn_addPic" href="javascript:void(0);">
				<span> <em></em>
					请点击此区域,选取图片后自动上传(~.~)
				</span>
				<input id="uploader" class="filePrew" name="uploadfile" type="file" class="jbFileBox" onChange="document.upl.submit(); jbImagesDialog.inProgress();"></a>
		</p>
	</form>

	<script>
		var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
		var base64DecodeChars = new Array(
		　　-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		　　-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		　　-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,
		　　52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,
		　　-1,　0,　1,　2,　3,  4,　5,　6,　7,　8,　9, 10, 11, 12, 13, 14,
		　　15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,
		　　-1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
		　　41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);

		function base64encode(str) {
			　　var out, i, len;
			　　var c1, c2, c3;
			　　len = str.length;
			　　i = 0;
			　　out = "";
			　　while(i < len) {
			 c1 = str.charCodeAt(i++) & 0xff;
			 if(i == len)
			 {
			　　 out += base64EncodeChars.charAt(c1 >> 2);
			　　 out += base64EncodeChars.charAt((c1 & 0x3) << 4);
			　　 out += "==";
			　　 break;
			 }
			 c2 = str.charCodeAt(i++);
			 if(i == len)
			 {
			　　 out += base64EncodeChars.charAt(c1 >> 2);
			　　 out += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));
			　　 out += base64EncodeChars.charAt((c2 & 0xF) << 2);
			　　 out += "=";
			　　 break;
			 }
			 c3 = str.charCodeAt(i++);
			 out += base64EncodeChars.charAt(c1 >> 2);
			 out += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));
			 out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >>6));
			 out += base64EncodeChars.charAt(c3 & 0x3F);
			　　}
			　　return out;
		}

		function base64decode(str) {
			　　var c1, c2, c3, c4;
			　　var i, len, out;
			　　len = str.length;
			　　i = 0;
			　　out = "";
			　　while(i < len) {
			 /* c1 */
			 do {
			　　 c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
			 } while(i < len && c1 == -1);
			 if(c1 == -1)
			　　 break;
			 /* c2 */
			 do {
			　　 c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
			 } while(i < len && c2 == -1);
			 if(c2 == -1)
			　　 break;
			 out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));
			 /* c3 */
			 do {
			　　 c3 = str.charCodeAt(i++) & 0xff;
			　　 if(c3 == 61)
			　return out;
			　　 c3 = base64DecodeChars[c3];
			 } while(i < len && c3 == -1);
			 if(c3 == -1)
			　　 break;
			 out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));
			 /* c4 */
			 do {
			　　 c4 = str.charCodeAt(i++) & 0xff;
			　　 if(c4 == 61)
			　return out;
			　　 c4 = base64DecodeChars[c4];
			 } while(i < len && c4 == -1);
			 if(c4 == -1)
			　　 break;
			 out += String.fromCharCode(((c3 & 0x03) << 6) | c4);
			　　}
			　　return out;
		}

		function utf16to8(str) {
			　　var out, i, len, c;
			　　out = "";
			　　len = str.length;
			　　for(i = 0; i < len; i++) {
			 c = str.charCodeAt(i);
			 if ((c >= 0x0001) && (c <= 0x007F)) {
			　　 out += str.charAt(i);
			 } else if (c > 0x07FF) {
			　　 out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));
			　　 out += String.fromCharCode(0x80 | ((c >>　6) & 0x3F));
			　　 out += String.fromCharCode(0x80 | ((c >>　0) & 0x3F));
			 } else {
			　　 out += String.fromCharCode(0xC0 | ((c >>　6) & 0x1F));
			　　 out += String.fromCharCode(0x80 | ((c >>　0) & 0x3F));
			 }
			　　}
			　　return out;
		}

		function utf8to16(str) {
			　　var out, i, len, c;
			　　var char2, char3;
			　　out = "";
			　　len = str.length;
			　　i = 0;
			　　while(i < len) {
			 c = str.charCodeAt(i++);
			 switch(c >> 4)
			 {
			　 case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:
			　　 // 0xxxxxxx
			　　 out += str.charAt(i-1);
			　　 break;
			　 case 12: case 13:
			　　 // 110x xxxx　 10xx xxxx
			　　 char2 = str.charCodeAt(i++);
			　　 out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
			　　 break;
			　 case 14:
			　　 // 1110 xxxx　10xx xxxx　10xx xxxx
			　　 char2 = str.charCodeAt(i++);
			　　 char3 = str.charCodeAt(i++);
			　　 out += String.fromCharCode(((c & 0x0F) << 12) |
			　　　　((char2 & 0x3F) << 6) |
			　　　　((char3 & 0x3F) << 0));
			　　 break;
			 }
			　　}
			　　return out;
		}
		
		 function getCookie(name) {
		    var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
		    return r ? r[1] : undefined;
		}

		function AddElement(mtype){ 
			var mtype,tem=document.getElementById("upl"); 
			var newinput = document.createElement("input");
			if (getCookie("_xsrf")) {
			var parts = getCookie("_xsrf").split("|");
			var token = base64decode(parts[0]);
			newinput.name="_xsrf";
			newinput.value= token;
			//alert( token );
			};
			newinput.type=mtype;
			tem.appendChild(newinput); 
		}
		AddElement("hidden");
	</script>
	<iframe id="upload_target" name="upload_target"></iframe>
</body>
</html>